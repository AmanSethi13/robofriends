{"version":3,"sources":["component/Card.js","component/CardList.js","component/Scroll.js","component/SearchBox.js","component/ErrorBoundary.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","src","alt","cardList","robots","cardComponent","map","user","i","Scroll","style","overflowY","border","height","children","SearchBox","searchChange","type","placeholder","onChange","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onsearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","CardList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAmBeA,EAjBF,SAACC,GAAS,IACZC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACpB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,UACzD,gCACE,6BACKL,IAEL,4BACKC,WCUJK,EAnBE,SAACP,GAAS,IACjBQ,EAAUR,EAAVQ,OACDC,EAAiBD,EAAOE,KAAI,SAACC,EAAKC,GACpC,OACI,cAAC,EAAD,CAEIT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAOjB,OACI,gCAEIH,EAFJ,QCNQI,G,MARA,SAACb,GACb,OACI,sBAAKc,MAAS,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAApE,UACKjB,EAAMkB,SADX,SCQSC,EAVG,SAACnB,GAAS,IACjBoB,EAAiBpB,EAAjBoB,aACP,OACI,qBAAKhB,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAAmCiB,KAAK,SAASC,YAAY,gBAC7EC,SAAUH,OCeTI,E,kDAnBX,WAAYxB,GAAO,IAAD,8BACd,cAAMA,IACDyB,MAAQ,CACTC,UAAU,GAHA,E,8DAOAC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAI1B,OAAGG,KAAKJ,MAAMC,SACH,4DAEJG,KAAK7B,MAAMkB,a,GAhBGa,aCsDbC,E,kDA/CX,aAAc,IAAD,8BACT,gBAePC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAACK,YAAcD,EAAME,OAAOC,SAfpC,EAAKZ,MAAQ,CACTjB,OAAQ,GACR2B,YAAa,IAJR,E,gEAOO,IAAD,OACrBG,MAAM,8CAA8CC,MAAK,SAAAC,GAChD,OAAOA,EAASC,UACtBF,MAAK,SAAAG,GACP,EAAKZ,SAAS,CAAEtB,OAAQkC,S,+BASf,IAAD,EACuBb,KAAKJ,MAA5BjB,EADA,EACAA,OAAQ2B,EADR,EACQA,YACTQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAEtD,OAAItC,EAAOwC,OAKT,sBAAK5C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWgB,aAAcS,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAACgB,EAAD,CAAUzC,OAAQmC,WAThB,oBAAIvC,UAAU,iCAAd,yB,GA3BO2B,aCIHmB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d9792f6a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props)=>{\r\n    const {name, email, id} = props;\r\n    return(\r\n        <div className=\" tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?size=200x200`} alt='robot' />\r\n            <div>\r\n              <h2>\r\n                  {name}\r\n              </h2>\r\n              <p>\r\n                  {email}\r\n              </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst cardList = (props)=>{\r\n   const {robots} = props;\r\n   const cardComponent  = robots.map((user,i)=>{\r\n       return(\r\n           <Card\r\n               key={i}\r\n               id={robots[i].id}\r\n               name={robots[i].name}\r\n               email={robots[i].email}\r\n           />\r\n       )\r\n   });\r\n   return(\r\n       <div>\r\n          \r\n          {cardComponent};\r\n       </div>\r\n   );\r\n}\r\nexport default cardList;","import React from 'react';\r\n\r\nconst Scroll = (props)=>{\r\n   return(\r\n       <div style = {{overflowY:'scroll', border:'5px solid black', height:'500px'}}>\r\n           {props.children};\r\n       </div>\r\n   )\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\n const SearchBox = (props)=>{\r\n     const {searchChange } = props;\r\n     return(\r\n         <div className='pa2'>\r\n             <input className='pa3 ba b--green bg-lightest-blue' type=\"search\" placeholder='search robots'\r\n              onChange={searchChange}\r\n             />\r\n         </div>\r\n     )\r\n }\r\n export default SearchBox;","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true });\r\n    }\r\n\r\n    render(){\r\n       if(this.state.hasError){\r\n           return <h1>Ooops. This is not good :(</h1>\r\n       }\r\n       return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport CardList from '../component/CardList';\r\n// import {robots} from './robots';\r\nimport './App.css'\r\nimport Scroll from '../component/Scroll';\r\nimport SearchBox from '../component/SearchBox';\r\nimport ErrorBoundary from '../component/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '',\r\n        }\r\n    }\r\n    componentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users').then(response=>{\r\n           return response.json();\r\n\t\t}).then(users => {\r\n\t\t\tthis.setState({ robots: users })\r\n\t\t})\r\n       \r\n\t}\r\n   \r\n\tonsearchChange = (event) =>{\r\n\t\tthis.setState({searchfield : event.target.value});\r\n\t }\r\n\r\n   render(){\r\n\t   const {robots, searchfield} = this.state;\r\n\t   const filteredRobots = robots.filter(robot => {\r\n\t\t   return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t   });\r\n\t   if(!robots.length){\r\n\t\t  return <h1 className=\"f6 f2-m f-subheadline-l fw6 tc\">Loading</h1>\r\n\t   }\r\n     else{\r\n\t\t   return (\r\n\t\t\t   <div className='tc'>\r\n\t\t\t\t   <h1 className='f1'>ROBOFRIENDS</h1>\r\n\t\t\t\t   <SearchBox searchChange={this.onsearchChange} />\r\n\t\t\t\t   <Scroll>\r\n\t\t\t\t\t   <ErrorBoundary>\r\n\t\t\t\t\t\t   <CardList robots={filteredRobots} />\r\n\t\t\t\t\t   </ErrorBoundary>\r\n\t\t\t\t   </Scroll>\r\n\t\t\t\t   \r\n\t\t\t   </div>\r\n\r\n\r\n\t\t   )\r\n\t }\r\n   }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\n\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}